{
  "name": "creole",
  "description": "Creole parser",
  "version": "0.0.0",
  "author": {
    "name": "shin1morita@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shin1m/creole.js.git"
  },
  "main": "build/creole.js",
  "files": [
    "build"
  ],
  "scripts": {
    "prepublish": "coffee -o build -c creole.coffee",
    "test": "mocha --compilers coffee:coffee-script -r should -R spec test.coffee"
  },
  "devDependencies": {
    "coffee-script": "*",
    "mocha": "*",
    "should": "*"
  },
  "readme": "# creole.js [![Build Status](https://secure.travis-ci.org/shin1m/creole.js.png)](http://travis-ci.org/shin1m/creole.js)\n\ncreole.js is a [Creole 1.0](http://wikicreole.org/wiki/Creole1.0) parser for javascript.\n\nIt can run on both client side and server side.\n\n\n## How to Use\n\n    class Builder\n      start: (name, options) ->\n      end: ->\n      text: (value) ->\n\n    require('creole').parse new Builder, 'creole...'\n\n\n## Example Builder\n\nIn html.coffee:\n\n    class Builder\n      constructor: (@e, @u) -> @context = []\n      bold:\n        start: -> @u '<strong>'\n        end: -> @u '</strong>'\n      ...\n      link:\n        start: (options) ->\n          @u '<a href=\"'\n          @e options.link\n          @u '\">'\n        end: -> @u '</a>'\n      ...\n      start: (name, options) ->\n        handler = @[name]\n        if handler?\n          @context.push handler\n          handler.start.call @, options\n        else\n          @context.push null\n      end: ->\n        @context.pop()?.end.call @\n      text: (value) -> @e value\n\n    exports = module?.exports ? {}\n    window.html = exports if window?\n    exports.Builder = Builder\n\n\n## Client Side Example\n\nIn demo.html:\n\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <title>creole.js Live Demo</title>\n    </head>\n    <body>\n    <div id=\"preview\"></div>\n    <textarea id=\"source\" rows=\"8\" cols=\"80\">\n    = creole.js Live Demo\n\n    creole.js is a [[http://wikicreole.org/wiki/Creole1.0|Creole 1.0]] parser for javascript.\n\n    It can run on both client side and server side.\n\n    ----\n    Edit the source below.\n    </textarea>\n    <script src=\"http://code.jquery.com/jquery-latest.js\"></script>\n    <script src=\"creole.js\"></script>\n    <script src=\"html.js\"></script>\n    <script>\n        var escapes = {'&': '&amp;', '\"': '&quot;', '<': '&lt;', '>': '&gt;'};\n        var preview = function() {\n            var result = [];\n            var builder = new html.Builder(function(value) {\n                result.push(value.replace(/[&\"<>]/g, function(c) {\n                    return escapes[c];\n                }));\n            }, function(value) {\n                result.push(value);\n            });\n            creole.parse(builder, $('#source').val());\n            $('#preview').html(result.join(''));\n        };\n        $('#source').data('preview', null).on('input', function() {\n            clearTimeout($(this).data('preview'));\n            $(this).data('preview', setTimeout(preview, 500));\n        });\n        preview();\n    </script>\n    </body>\n    </html>\n\n\n## Server Side Example\n\nIn app.coffee:\n\n    ...\n    creole = require 'creole'\n    html = require 'html'\n\n    app.get '/', (req, res) ->\n      res.render 'index',\n        creole: (escaped, unescaped, content) ->\n          creole.parse new html.Builder(escaped, unescaped), content\n        content: '''\n          = creole.js Live Demo\n\n          creole.js is a [[http://wikicreole.org/wiki/Creole1.0|Creole 1.0]] parser for javascript.\n\n          It can run on both client side and server side.\n        '''\n    ...\n\nIn index.jade:\n\n    .preview\n      - creole(function(value) {\n        = value\n      - }, function(value) {\n        != value\n      - }, content)\n\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2012 Shin-ichi MORITA\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shin1m/creole.js/issues"
  },
  "_id": "creole@0.0.0",
  "dist": {
    "shasum": "be13f2e90d895e98701451664c5eec7ae34f65f3"
  },
  "_from": "creole@",
  "_resolved": "https://registry.npmjs.org/creole/-/creole-0.0.0.tgz"
}
